package com.mugen.riot.model.match;

import lombok.Builder;
import lombok.Value;

@Builder(toBuilder = true)
@Value
public class ParticipantStats {

    int item0;
    int item1;
    int item2;
    int item3;
    int item4;
    int item5;
    int item6;
    int totalUnitsHealed;
    int largestMultiKill;
    int goldEarned;
    int nodeNeutralizeAssist;
    int totalPlayerScore;
    int champLevel;
    int neutralMinionsKilled;
    int deaths;
    int tripleKills;
    int wardsKilled;
    int pentaKills;
    int largestCriticalStrike;
    int nodeNeutralize;
    int totalTimeCrowdControlDealt;
    int totalScoreRank;
    int nodeCapture;
    int wardsPlaced;
    int largestKillingSpree;
    int neutralMinionsKilledTeamJungle;
    int totalMinionsKilled;
    int visionWardsBoughtInGame;
    int objectivePlayerScore;
    int kills;
    int combatPlayerScore;
    int inhibitorKills;
    int turretKills;
    int participantId;
    int nodeCaptureAssist;
    int assists;
    int teamObjective;
    int altarsNeutralized;
    int goldSpent;
    int altarsCaptured;
    int unrealKills;
    int longestTimeSpentLiving;
    int killingSprees;
    int sightWardsBoughtInGame;
    int neutralMinionsKilledEnemyJungle;
    int doubleKills;
    int quadraKills;
    int playerScore0;
    int playerScore1;
    int playerScore2;
    int playerScore3;
    int playerScore4;
    int playerScore5;
    int playerScore6;
    int playerScore7;
    int playerScore8;
    int playerScore9;
    int perk0;
    int perk0Var1;
    int perk0Var2;
    int perk0Var3;
    int perk1;
    int perk1Var1;
    int perk1Var2;
    int perk1Var3;
    int perk2;
    int perk2Var1;
    int perk2Var2;
    int perk2Var3;
    int perk3;
    int perk3Var1;
    int perk3Var2;
    int perk3Var3;
    int perk4;
    int perk4Var1;
    int perk4Var2;
    int perk4Var3;
    int perk5;
    int perk5Var1;
    int perk5Var2;
    int perk5Var3;
    int perkPrimaryStyle;
    int perkSubStyle;
    int statPerk0;
    int statPerk1;
    int statPerk2;
    long trueDamageDealt;
    long trueDamageDealtToChampions;
    long visionScore;
    long physicalDamageDealt;
    long totalHeal;
    long damageDealtToTurrets;
    long trueDamageTaken;
    long totalDamageDealtToChampions;
    long physicalDamageDealtToChampions;
    long totalDamageDealt;
    long timeCCingOthers;
    long magicalDamageTaken;
    long magicDamageDealt;
    long damageSelfMitigated;
    long magicDamageDealtToChampions;
    long damageDealtToObjectives;
    long totalDamageTaken;
    long physicalDamageTaken;
    boolean firstBloodAssist;
    boolean firstBloodKill;
    boolean win;
    boolean firstTowerAssist;
    boolean firstInhibitorAssist;
    boolean firstTowerKill;
    boolean firstInhibitorKill;

}
